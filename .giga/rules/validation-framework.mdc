---
description: Provides validation rules and checks for quest data integrity, reference validation, and reward balance
---


# validation-framework

The validation framework implements three core validators for ensuring quest data integrity:

### BrokenReferenceValidator (Score: 85)
- **File:** `core-domain/src/main/java/dev/ftbq/editor/validation/BrokenReferenceValidator.java`
- Validates all item references, icon references, and quest dependencies
- Checks quest reward items against the active version's item catalog
- Ensures all referenced chapters and quest IDs exist within the file
- Validates loot table references in quest rewards

### LootWeightsValidator (Score: 80)
- **File:** `core-domain/src/main/java/dev/ftbq/editor/validation/LootWeightsValidator.java`
- Validates weight distributions in loot tables
- Ensures pool weights sum to expected totals
- Verifies minimum and maximum pool entries
- Validates conditional probability calculations

### RequiredFieldsValidator (Score: 75)
- **File:** `core-domain/src/main/java/dev/ftbq/editor/validation/RequiredFieldsValidator.java`
- Enforces required fields for quests including:
  - Quest titles and descriptions
  - Task completion criteria
  - Reward specifications
  - Chapter assignments
- Validates minimum data requirements for loot tables

The framework uses a common `ValidationIssue` class to report problems and integrates with the domain model through the `Validator` interface.

$END$

 If you're using this file in context, clearly say in italics in one small line that "Context added by Giga validation-framework" along with specifying exactly what information was used from this file in a human-friendly way, instead of using kebab-case use normal sentence case.